substitutions:
  _REGION: us-central1
  _PROJECT_ID: job-sender-424116
  _PROJECT_NUMBER: '538044212952'
  _SERVICE_NAME: job-sender
  _SERVICE_ACCOUNT_EMAIL: 'sa-backend@job-sender-424116.iam.gserviceaccount.com'
  _IMAGE_NAME: job-sender
  _IMAGE_TAG: v1.0.134
  _REPOSITORY: job-sender-repository
  _TIMESHEETS_BUCKET_NAME: job-sender-timesheets
  _EMAIL_AGGREGATOR_QUEUE_NAME: email-aggregator-queue
  _SECRET_NAME_SERVICE_ACCOUNT_KEY: job-sender-service-account-key
  _SECRET_NAME_FIREBASE_WEB_API_KEY: job-sender-firebase-web-api-key
  _SECRET_NAME_EMAIL_SERVICE_EMAIL: job-sender-email-service-email # TODO: zmienic na maila job sender, narazie uzyty mail z proteggo
  _SECRET_NAME_EMAIL_SERVICE_APP_PASSWORD: job-sender-email-service-app-password # TODO: ustawic app password dla maila job sender
  _SECRET_NAME_SESSION_COOKIE_STORE: job-sender-session-cookie-store-key

steps:
  # Create the Cloud Tasks queue
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'sh' 
    args:
      - '-c'
      - |
        if ! gcloud tasks queues describe $_EMAIL_AGGREGATOR_QUEUE_NAME --location=$_REGION --project=$_PROJECT_ID; then
          echo "Queue does not exist, creating..."
          gcloud tasks queues create $_EMAIL_AGGREGATOR_QUEUE_NAME --location=$_REGION
        fi

  # Check if the repository exists and create it if not
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        if ! gcloud artifacts repositories describe $_REPOSITORY --location=$_REGION --project=$_PROJECT_ID; then
          echo "Repository does not exist, creating..."
          gcloud artifacts repositories create $_REPOSITORY --repository-format=docker --location=$_REGION --project=$_PROJECT_ID
        fi

  # Create the Bucket for the timesheets
  - name: 'gcr.io/cloud-builders/gsutil'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        if ! gsutil ls gs://$_TIMESHEETS_BUCKET_NAME; then
          echo "Bucket for timesheets does not exist, creating..."
          gsutil mb -l $_REGION gs://$_TIMESHEETS_BUCKET_NAME
        fi

  # Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', '$_REGION-docker.pkg.dev/$_PROJECT_ID/$_REPOSITORY/$_IMAGE_NAME:$_IMAGE_TAG', '.']

  # Push the Docker image to the Google Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', '$_REGION-docker.pkg.dev/$_PROJECT_ID/$_REPOSITORY/$_IMAGE_NAME:$_IMAGE_TAG']

  # Describe the Docker image
  - name: 'gcr.io/cloud-builders/gcloud'
    args: ['artifacts', 'docker', 'images', 'describe', '$_REGION-docker.pkg.dev/$_PROJECT_ID/$_REPOSITORY/$_IMAGE_NAME:$_IMAGE_TAG']

  # Deploy the Docker image to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'deploy'
      - '$_SERVICE_NAME'
      - '--image'
      - '$_REGION-docker.pkg.dev/$_PROJECT_ID/$_REPOSITORY/$_IMAGE_NAME:$_IMAGE_TAG'
      - '--region'
      - '$_REGION'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--memory'
      - '1Gi'
      - '--cpu'
      - '2'
      - '--min-instances'
      - '0'
      - '--max-instances'
      - '3'
      - '--service-account'
      - $_SERVICE_ACCOUNT_EMAIL
      - '--set-env-vars'
      - 'GOOGLE_CLOUD_PROJECT_ID=$_PROJECT_ID, GOOGLE_CLOUD_PROJECT_LOCATION_ID=$_REGION, GOOGLE_CLOUD_PROJECT_NUMBER=$_PROJECT_NUMBER,SECRET_NAME_SERVICE_ACCOUNT_KEY=$_SECRET_NAME_SERVICE_ACCOUNT_KEY,SECRET_NAME_FIREBASE_WEB_API_KEY=$_SECRET_NAME_FIREBASE_WEB_API_KEY,SECRET_NAME_EMAIL_SERVICE_EMAIL=$_SECRET_NAME_EMAIL_SERVICE_EMAIL,SECRET_NAME_EMAIL_SERVICE_APP_PASSWORD=$_SECRET_NAME_EMAIL_SERVICE_APP_PASSWORD, SECRET_NAME_SESSION_COOKIE_STORE=$_SECRET_NAME_SESSION_COOKIE_STORE, EMAIL_AGGREGATOR_QUEUE_NAME=$_EMAIL_AGGREGATOR_QUEUE_NAME, TIMESHEETS_BUCKET_NAME=$_TIMESHEETS_BUCKET_NAME, SERVICE_ACCOUNT_EMAIL=$_SERVICE_ACCOUNT_EMAIL'
      
images:
  - '$_REGION-docker.pkg.dev/$_PROJECT_ID/$_REPOSITORY/$_IMAGE_NAME:$_IMAGE_TAG'
